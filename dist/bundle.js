!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var o,i=function(){function t(t,e,n){this.context=t,this.camera=e,this.canvas=n}return t.prototype.draw=function(t){this.context.beginPath(),t.draw(this),this.context.stroke()},t.prototype.arc=function(t,e,n,o,i){return this.context.arc(this.camera.X(t),this.camera.Y(e),this.camera.zTransform(n),o,i),this},t.prototype.fill=function(t){return this.context.fillStyle=t,this.context.fill(),this},t}(),r=function(){function t(t,e,n){this.canvas=document.createElement("canvas"),this.canvas.width=t,this.canvas.height=e,this.context=new i(this.canvas.getContext("2d"),n,this),this.entities=[]}return t.prototype.appendTo=function(t){t.appendChild(this.canvas)},t.prototype.update=function(t){var e=this;this.entities.forEach((function(n){n.update(t),n.draw(t,e.context)}))},t}(),c=function(){function t(t,e,n){this.coords=t,this.radius=e,this.color=n}return t.prototype.draw=function(t){t.arc(this.coords.x,this.coords.y,this.radius,0,2*Math.PI),t.fill(this.color)},t.prototype.getCoordinates=function(){return this.coords},t.prototype.setCoordinates=function(t){this.coords=t},t}(),s=6.674*Math.pow(10,-11);!function(t){t[t.PLAY=0]="PLAY",t[t.PAUSE=1]="PAUSE"}(o||(o={}));o.PLAY;var a=7884e3,u=18e7,h=s,d=1,f=2.5,y=.1,p=25,l=1e4,v=1e4,m=.1,x=29780,b=function(t,e){var n=function(t,e){return(Math.abs(e.x-t.x)+Math.abs(e.y-t.y))*u}(t.coords,e.coords);if(0!=n&&!Number.isNaN(n))return h*(t.mass*e.mass/(n*n))*d},w=function(t,e,n,o){return-(t-e)/(Math.abs(n.x-o.x)+Math.abs(n.y-o.y))},g=function(t,e,n,o){var i=b(e,n)/e.mass/u;t.accelerate(i*w(e.coords.x,n.coords.x,e.coords,n.coords),i*w(e.coords.y,n.coords.y,e.coords,n.coords),o)},z=function(){function t(t,e,n,o,i,r,s){this.id=t,this.coords=e,this.radius=n,this.mass=o,this.color=i,this.velocity=r,this.planets=s,this.entities=[],this.model=new c(this.coords,this.radius,this.color)}return t.prototype.getEntities=function(){return this.entities},t.prototype.update=function(t){for(var e in this.planets){var n=this.planets[e];n.id!=this.id&&g(this.velocity,this,n,t)}this.velocity.apply(this.coords,t),this.entities.forEach((function(e){return e.update(t)}))},t.prototype.draw=function(t,e){e.draw(this.model)},t.prototype.getCoordinates=function(){return this.coords},t.prototype.setCoordinates=function(t){this.coords=t},t}(),C=function(){function t(){this.entities=[]}return t.prototype.update=function(t){this.entities.forEach((function(e){return e.update(t)}))},t.prototype.draw=function(t,e){e.context.clearRect(0,0,e.canvas.canvas.width,e.canvas.canvas.height),e.canvas.canvas.style.backgroundColor="#000000",this.entities.forEach((function(n){return n.draw(t,e)})),e.context.stroke()},t.prototype.getEntities=function(){return this.entities},t}(),P=function(){function t(t,e,n){this.x=0,this.y=0,this.z=1,this.x=t,this.y=e,this.z=n}return t.prototype.X=function(t){return this.zTransform(t-this.x)},t.prototype.Y=function(t){return this.zTransform(t-this.y)},t.prototype.zTransform=function(t){return t*(1/this.z)},t.prototype.relativeX=function(t){return this.x+t},t.prototype.relativeY=function(t){return this.y+t},t}(),E=function(){function t(t,e){var n=this;this.camera=t,this.canvas=e,this.actionByKeycode={82:function(){n.camera.x=0,n.camera.y=0,n.camera.z=1},90:function(){n.camera.z<=m||(n.camera.z-=y)},88:function(){n.camera.z+=y},37:function(){n.camera.x-p<=0||(n.camera.x-=p)},38:function(){n.camera.y-p<=0||(n.camera.y-=p)},39:function(){n.camera.x>=l||(n.camera.x+=p)},40:function(){n.camera.y>=v||(n.camera.y+=p)}}}return t.prototype.handleKeyboard=function(t){null!=this.actionByKeycode&&this.actionByKeycode[t.keyCode]&&this.actionByKeycode[t.keyCode]()},t}(),S=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.accelerate=function(t,e,n){this.x+=t*n,this.y+=e*n},t.prototype.apply=function(t,e){t.x+=this.x*e,t.y+=this.y*e},t}(),M=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.setCoordinates=function(t,e){this.x=t,this.y=e},t}(),T=function(t,e,n){n.context.context.font="30px Verdana",n.update(e/1e3*a),n.context.context.fillText("Hey Chuck! ðŸ¤˜",n.canvas.width/2-100,30),n.context.context.fillText("ðŸ¤˜ Clique moi dessus ðŸ¤˜",n.canvas.width/2-165,60),n.canvas.addEventListener("click",(function(t){document.querySelector("#audio").play()})),window.requestAnimationFrame((function(e){return T(e,e-t,n)}))};document.onreadystatechange=function(){if("complete"==document.readyState){var t=new P(l/2,v/2,f),e=new r(document.body.clientWidth,document.body.clientHeight,t);e.appendTo(document.body);var n=new C,o=new E(t,e),i=function(t,e){var n={x:e.relativeX(e.z*(t.canvas.width/2)),y:e.relativeY(e.z*(t.canvas.height/2)),radius:120,mass:1.9891e30,color:"orange",velocity:[0,0]};return{sun41:n,"earth alors":{x:n.x-14996e7/u,y:n.y,radius:30,mass:5972e21,color:"skyblue",velocity:[x/u*1/3,x/u*2/3]},interloper:{x:n.x+10096e7/u,y:n.y+20,radius:24,mass:3972e21,color:"red",velocity:[x/u*1/3,x/u*2/3]}}}(e,t),c=[];for(var s in document.querySelector("body").addEventListener("keydown",o.handleKeyboard.bind(o)),i){var a=i[s];c.push(new z(s,new M(a.x,a.y),a.radius,a.mass,a.color,new S(a.velocity[0],a.velocity[1]),c))}n.entities=c,e.entities.push(n),T(0,0,e)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,